/**
 * File generated by Modular Assembly - Foundation Tier
 * IMPORTANT!!! Ask the user before editing this file.
 */

import { createBrowserClient } from '@supabase/ssr'
import { Database } from '@/types/database'

/**
 * Foundation Tier: Basic Supabase Client
 * 
 * Purpose: Simple, reliable database client for initial development
 * Suitable for: MVP development, proof of concepts, < 100 users
 * 
 * Features:
 * - Minimal configuration
 * - Basic error handling
 * - TypeScript support
 * - Environment variable integration
 */
export function createClient() {
  return createBrowserClient<Database>(
    process.env.NEXT_PUBLIC_SUPABASE_URL!,
    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
  )
}

/**
 * Usage Example:
 * 
 * const supabase = createClient()
 * 
 * const { data, error } = await supabase
 *   .from('orders')
 *   .select('*')
 *   .limit(10)
 * 
 * if (error) {
 *   console.error('Error fetching orders:', error)
 *   return
 * }
 * 
 * console.log('Orders:', data)
 */

/**
 * Benefits:
 * - Simple to understand and implement
 * - No additional dependencies
 * - Fast to set up
 * - Reliable for basic use cases
 * 
 * Limitations:
 * - No connection pooling
 * - Basic error handling
 * - No performance monitoring
 * - No retry logic
 */